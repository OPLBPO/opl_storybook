<?php
/**
 * @file
 * Code for the OPL Storybook feature.
 */

include_once 'opl_storybook.features.inc';

/**
 * Implements hook_ctools_plugin_directory()
 */
function opl_storybook_ctools_plugin_directory($module, $plugin) {
  if ($module == "panels" && in_array($plugin, array('layouts', 'styles'))) {
    return "plugins/". $plugin;
  }

  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/". $plugin;
  }
}

/**
 * Implements hook_field_extra_fields().
 */
function opl_storybook_field_extra_fields() {
  $extra['node']['audio']['display']['transcription_link_audio'] = array(
    'label' => t('Audio Transcription Link'),
    'description' => t('Links to new tab with transcription'),
    'weight' => 0,
  );
  $extra['node']['video']['display']['transcription_link_video'] = array(
    'label' => t('Video Transcription Link'),
    'description' => t('Links to new tab with transcription'),
    'weight' => 0,
  );
  return $extra;
}

/**
 * Implements hook_node_view().
 */
function opl_storybook_node_view($node, $view_mode, $langcode) {
  // Only show the field for node of article type.
  if ($node->type == 'audio') {
    $node->content['transcription_link_audio'] = array(
      '#markup' => l(t('Transcription'), 'node/' . $node->nid, array('attributes' => array('target' => '_blank'), 'fragment' => 'transcription')),
    );
  }
  if ($node->type == 'video') {
    $node->content['transcription_link_video'] = array(
      '#markup' => l(t('Transcription'), 'node/' . $node->nid, array('attributes' => array('target' => '_blank'), 'fragment' => 'transcription')),
    );
  }  
}

/**
 * Implements hook_block_info().
 */
function opl_storybook_block_info() {

  $blocks['share_storybook'] = array(
    'info' => t('Share storybook page with Facebook, Twitter and Google'),
  );
  $blocks['chapter_img'] = array(
    'info' => t('Display thumbnail of taxonomy term'),
  );
  $blocks['chapter_title'] = array(
    'info' => t('Display title of taxonomy term'),
  );
  $blocks['view_prev_next'] = array(
    'info' => t('Display previous and next chapter'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function opl_storybook_block_view($delta = '') {

  $theme_name = 'oplbootstrap';
  $block = array();

  switch ($delta) {
    case 'share_storybook':
      $link = url(current_path(), array('absolute' => TRUE));
      $facebooklink = l(t('Share'), 'https://www.facebook.com/sharer/sharer.php', array('query' => array('u=' => $link),'attributes' => array('target' => '_blank')));
      $twitterlink = l(t('Tweet'), 'https://twitter.com/home', array('query' => array('status' => $link),'attributes' => array('target' => '_blank')));

      $sharecontent = '<ul class="social-media-share">';
      $sharecontent .= '<li class="share">';
      $sharecontent .= $facebooklink;
      $sharecontent .= '</li>';
      $sharecontent .= '<li class="tweet">';
      $sharecontent .= $twitterlink;
      $sharecontent .= '</li>';
      $sharecontent .= '</ul>';

      $block['content'] = $sharecontent;
      break;

    case 'chapter_img':
      
      $path = drupal_get_path_alias($_GET['q']);
      $path = explode('/', $path);
      $terms = taxonomy_get_term_by_name(array_pop($path));
      $term = reset($terms);
      $termload = taxonomy_term_load($term->tid); 

      $field_header_image = field_view_field('taxonomy_term',$termload,'field_image',array('label'=>'hidden'));

      $chapter_img_content = '<div>';
      $chapter_img_content .= render($field_header_image);
      $chapter_img_content .= '</div>';

      $block['content'] = $chapter_img_content;
      break; 

    case 'chapter_title':
      
      $path = drupal_get_path_alias($_GET['q']);
      $path = explode('/', $path);
      $terms = taxonomy_get_term_by_name(array_pop($path));
      $term = reset($terms);
      $termload = taxonomy_term_load($term->tid);  

      $name = $termload->name;

      $chapter_title_content = '<h2>';
      $chapter_title_content .= $name;
      $chapter_title_content .= '</h2>';

      $block['content'] = $chapter_title_content;
      break; 

    case 'view_prev_next': 
      $path = drupal_get_path_alias($_GET['q']);
      $path = explode('/', $path);
      $terms = taxonomy_get_term_by_name(array_pop($path));
      $term = reset($terms);
      $termload = taxonomy_term_load($term->tid);
      $name = $term->name;
      $vid = $term->vid;
      
      $treeterms = taxonomy_get_tree($term->vid);

      $chapterindex = 0;
      
      foreach ($treeterms as $key=>$value) {
        if ($value->name == $term->name) {
          $chapterindex = $key;
          break;
        }
      }

      $chapterparent = $treeterms[$chapterindex]->parents[0];

      $chapterparentindex = 0;

      foreach ($treeterms as $key=>$value) {
        if ($value->tid == $chapterparent) {
          $chapterparentindex = $key;
          break;
        }
      }

      $chapterparentname = $treeterms[$chapterparentindex]->name;

      $view_prev_next_content = '';

      if(isset($treeterms[$chapterindex -1]) && isset($treeterms[$chapterindex -1]->parents[0])){
        $prevchapterid = $treeterms[$chapterindex -1]->tid;
        $prevchapterparent = $treeterms[$chapterindex -1]->parents[0];
        $prevchaptername = $treeterms[$chapterindex -1]->name; 

        if(isset($prevchapterid) && ($chapterparent == $prevchapterparent)){
          $prevlink = l($prevchaptername, 'storybook/' . $chapterparentname . '/' . $prevchaptername);
          $view_prev_next_content .= '<div class="view-previous"><p>' . t('View Previous') . '</p><p>' . $prevlink . '</p></div>';
        }
      }
      
      if(isset($treeterms[$chapterindex +1]) && isset($treeterms[$chapterindex +1]->parents[0])){
        $nextchapterid = $treeterms[$chapterindex +1]->tid;
        $nextchapterparent = $treeterms[$chapterindex +1]->parents[0];
        $nextchaptername = $treeterms[$chapterindex +1]->name;

        if(isset($nextchapterid) && ($chapterparent == $nextchapterparent)){
          $nextlink = l($nextchaptername, 'storybook/' . $chapterparentname . '/' . $nextchaptername);
          $view_prev_next_content .= '<div class="view-next"><p>' . t('View Next') . '</p><p>' . $nextlink . '</p></div>';
        }
      }  

      $block['content'] = $view_prev_next_content;
      break;  
  }
  return $block;
}

/**
 * Implements hook_module_implements_alter().
 */
function opl_storybook_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'theme_registry_alter') {
    unset($implementations['image_field_caption']);
  }
}

